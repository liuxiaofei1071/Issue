# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-04-18 07:24
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=200, verbose_name='命令')),
                ('result', models.CharField(max_length=2000, verbose_name='结果')),
                ('hosts_list', models.CharField(max_length=20000, verbose_name='执行机器')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Cron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='计划名称')),
                ('time', models.CharField(max_length=32, verbose_name='计划任务执行时间')),
                ('host_list', models.CharField(max_length=200, verbose_name='执行机器')),
                ('job', models.CharField(max_length=120, verbose_name='任务')),
                ('note', models.CharField(blank=True, max_length=300, null=True, verbose_name='备注')),
                ('linux_user', models.CharField(blank=True, default='root', max_length=30, null=True, verbose_name='执行人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, unique=True, verbose_name='主机名称')),
                ('ip', models.GenericIPAddressField(verbose_name='主机ip地址')),
                ('version', models.CharField(max_length=132, verbose_name='版本')),
                ('ssh', models.CharField(default=22, max_length=16, verbose_name='ssh端口')),
                ('type', models.CharField(choices=[('0', 'nginx'), ('1', 'redis'), ('2', 'db'), ('3', 'server')], default='3', max_length=12, verbose_name='主机类型')),
                ('hosts_status', models.CharField(choices=[('online', '在线'), ('offline', '离线'), ('maintain', '维修'), ('stop_use', '停用')], default='production', max_length=64, verbose_name='主机状态')),
                ('hosts_environment', models.CharField(choices=[('test', '测试'), ('developing', '开发'), ('pre_production ', '预生产'), ('production ', '生产')], default='production', max_length=64, verbose_name='主机环境')),
            ],
        ),
        migrations.CreateModel(
            name='HostIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(max_length=30, verbose_name='主机发布时间')),
                ('status', models.CharField(choices=[('0', '等待发布'), ('1', '发布中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '发布成功'), ('5', '失败'), ('6', '回滚失败'), ('7', '回滚成功')], default='0', max_length=64, verbose_name='主机发布状态')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Host', verbose_name='发布机器')),
            ],
        ),
        migrations.CreateModel(
            name='Init',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='名称')),
                ('function', models.CharField(max_length=200, unique=True, verbose_name='初始化功能')),
                ('playbook', models.CharField(max_length=100, verbose_name='playbook路径')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='InitLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('hosts_list', models.ManyToManyField(to='web.Host', verbose_name='执行机器')),
                ('init', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Init', verbose_name='初始化功能')),
            ],
            options={
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('0', '文件'), ('1', 'git')], default='0', max_length=50, verbose_name='发布类型')),
                ('status', models.CharField(choices=[('0', '等待发布'), ('1', '发布中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '发布成功'), ('5', '失败'), ('6', '回滚失败'), ('7', '回滚成功')], default='0', max_length=64, verbose_name='发布状态')),
                ('file_dir', models.CharField(max_length=50, verbose_name='部署发布系统')),
                ('backup', models.CharField(choices=[('0', '已备份'), ('1', '未备份')], default='0', max_length=12, verbose_name='备份情况')),
                ('backup_path', models.CharField(blank=True, max_length=300, null=True, verbose_name='备份文件地址')),
                ('upload_path', models.CharField(blank=True, max_length=300, null=True, verbose_name='上传文件地址')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='TeamProjt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='项目名称')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=50, verbose_name='项目创建时间')),
                ('develop_language', models.CharField(choices=[('0', 'python'), ('1', 'java'), ('2', 'go'), ('3', 'php'), ('4', 'html')], default='0', max_length=20, verbose_name='开发语言')),
                ('team_status', models.CharField(choices=[('0', '在用'), ('1', '下线')], default='0', max_length=2, verbose_name='项目状态')),
                ('nginx_conf', models.CharField(blank=True, max_length=254, null=True, verbose_name='nginx配置信息')),
                ('project_path', models.CharField(max_length=200, verbose_name='linux项目路径')),
                ('git_path', models.CharField(max_length=200, verbose_name='git地址')),
                ('note', models.CharField(blank=True, max_length=300, null=True, verbose_name='备注')),
                ('domain', models.CharField(blank=True, max_length=100, null=True, verbose_name='域名')),
            ],
            options={
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, verbose_name='用户名')),
                ('password', models.CharField(max_length=18)),
                ('role', models.CharField(choices=[('0', '开发'), ('1', '测试'), ('2', '运维')], default='0', max_length=10, verbose_name='角色')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('department', models.CharField(choices=[('develop', '开发'), ('operation', '运维'), ('test', '测试')], max_length=20, verbose_name='部门')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('is_admin', models.CharField(choices=[('0', 'admin'), ('1', '普通')], default='1', max_length=10, verbose_name='管理员')),
                ('create_time', models.DateTimeField(auto_now_add=True, max_length=50, verbose_name='创建时间')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.AddField(
            model_name='teamprojt',
            name='boss',
            field=models.ManyToManyField(related_name='boss', to='web.User', verbose_name='负责人'),
        ),
        migrations.AddField(
            model_name='teamprojt',
            name='developer',
            field=models.ManyToManyField(related_name='developer', to='web.User', verbose_name='开发人'),
        ),
        migrations.AddField(
            model_name='teamprojt',
            name='nginx_host',
            field=models.ManyToManyField(related_name='nginx_host', to='web.Host', verbose_name='nginx服务器'),
        ),
        migrations.AddField(
            model_name='teamprojt',
            name='ops_user',
            field=models.ManyToManyField(related_name='ops_user', to='web.User', verbose_name='运维人'),
        ),
        migrations.AddField(
            model_name='teamprojt',
            name='server_host',
            field=models.ManyToManyField(related_name='server_host', to='web.Host', verbose_name='后端主机'),
        ),
        migrations.AddField(
            model_name='teamprojt',
            name='tester',
            field=models.ManyToManyField(related_name='tester', to='web.User', verbose_name='测试人'),
        ),
        migrations.AddField(
            model_name='issue',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.TeamProjt', verbose_name='发布项目'),
        ),
        migrations.AddField(
            model_name='issue',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User', verbose_name='发布人'),
        ),
        migrations.AddField(
            model_name='initlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User', verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='init',
            name='create_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User', verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='hostissue',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Issue', verbose_name='发布信息'),
        ),
        migrations.AddField(
            model_name='hostissue',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.TeamProjt', verbose_name='发布项目'),
        ),
        migrations.AddField(
            model_name='cron',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User', verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='command',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.User', verbose_name='用户'),
        ),
    ]
